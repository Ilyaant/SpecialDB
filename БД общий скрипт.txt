create database Cleaning_Company
use Cleaning_Company

create table Rates(ID int primary key, Rate int not null, Criteria varchar(250) not null)
create table Positions(ID int primary key, Naming varchar(50) not null, Salary int not null)
create table Entities(ID int primary key, Naming varchar(50) not null, Square_Offices int not null, E_Address varchar(100) not null)
create table Individuals(Passport_SN int primary key, F_Name varchar(50) not null, S_Name varchar(50), L_Name varchar(50) not null, I_Address varchar(100) not null, Room_Square int not null)
create table C_Services(ID int primary key, Naming varchar(50) not null, Cost_m2 int not null, Popularity int)
create table Work_Types(ID int primary key, Naming varchar(100) not null)
create table Work_Spec(ID int primary key, W_Date date not null, W_Time time not null)
create table Employees(Passport_SN int primary key, ID_Positions int references Positions(ID), F_Name varchar(50) not null, S_Name varchar(50), L_Name varchar(50) not null, Salary int, Date_Birth date not null, Date_hire date not null)
create table Orders(Number int primary key, ID_Work_Spec int references Work_Spec(ID), O_Date date not null)
create table Register(Passport_SN_Employees int references Employees(Passport_SN), ID_Rates int references Rates(ID), Number_Orders int references Orders(Number), W_date date not null)
create table Contracts(Number int primary key, Passport_SN_Individuals int references Individuals(Passport_SN), ID_Entities int references Entities(ID), Number_Orders int references Orders(Number), C_Name varchar(100) not null, Sign_Date date not null, Date_Start date, Date_End date)
create table Employees_Individuals(Passport_SN_Employees int references Employees(Passport_SN), Passport_SN_Individuals int references Individuals(Passport_SN))
create table Employees_Entities(Passport_SN_Employees int references Employees(Passport_SN), ID_Entities int references Entities(ID))
create table Contracts_C_Services(Number_Contracts int references Contracts(Number), ID_C_Services int references C_Services(ID))
create table Work_Spec_Work_Types(ID_Work_Spec int references Work_Spec(ID), ID_Work_Types int references Work_Types(ID))

CREATE TRIGGER ADDSALARY 
   ON  [Employees] 
   INSTEAD OF INSERT
AS 
   DECLARE @ID_S INT
BEGIN
	INSERT INTO [Employees] ([Passport_SN], [ID_Positions], [F_Name], [S_Name], [L_Name], [Date_Birth], [Date_hire])
	(SELECT [Passport_SN], [ID_Positions], [F_Name], [S_Name], [L_Name], [Date_Birth], [Date_hire] FROM inserted)
	SET @ID_S = (SELECT [ID_Positions] FROM inserted)
	UPDATE [Employees]
	SET [Salary] = (SELECT [Salary] FROM [Positions] WHERE ID = @ID_S GROUP BY (Salary))
	WHERE ID_Positions = @ID_S
END
GO

CREATE TRIGGER ADDSALARY_UPDATE
   ON  [Employees] 
   AFTER UPDATE
AS 
   DECLARE @ID_S INT
IF UPDATE ([ID_Positions])
BEGIN
	SET @ID_S = (SELECT [ID_Positions] FROM inserted)
	UPDATE [Employees]
	SET [Salary] = (SELECT [Salary] FROM [Positions] WHERE ID = @ID_S GROUP BY (Salary))
	WHERE ID_Positions = @ID_S
END
GO

CREATE TRIGGER CHECKDATE
ON [Orders]
   INSTEAD OF INSERT
AS 
	DECLARE @NUM_O INT
	SET @NUM_O = (SELECT [Number] FROM inserted)
	IF EXISTS (SELECT * FROM inserted WHERE [O_Date] > GETDATE())
BEGIN
	RAISERROR ('WRONG ORDER DATE', 1, 1)
	RETURN
END
	ELSE
	INSERT INTO [Orders] ([ID_Work_Spec], [Number], [O_Date])
	(SELECT [ID_Work_Spec], [Number], [O_Date] FROM inserted)
GO

CREATE TRIGGER CHECKDATE_UPDATE
	ON [Orders]
   	AFTER UPDATE
AS 
	DECLARE @OLD DATE
	DECLARE @NEW DATE
	DECLARE @NUM_O INT;
BEGIN
	SET @NUM_O = (SELECT [Number] FROM inserted)
	SET @OLD = (SELECT [O_Date] FROM deleted)
	SET @NEW = (SELECT [O_Date] FROM inserted)
	IF @OLD <> @NEW
	IF EXISTS (SELECT * FROM inserted WHERE [O_Date] > GETDATE())
BEGIN
	RAISERROR ('WRONG ORDER DATE', 1, 1)
	RETURN
END
	ELSE
	UPDATE [Orders] 
	SET [O_Date] = (SELECT [O_Date] FROM inserted)
END

CREATE TRIGGER ENT_DEL 
	ON [Entities]
	INSTEAD OF DELETE
AS
     
BEGIN
	DELETE FROM Work_Spec_Work_Types WHERE ID_Work_Spec = (SELECT ID FROM Work_Spec WHERE ID = (SELECT ID_Work_Spec FROM Orders WHERE Number = (SELECT Number_Orders FROM Contracts WHERE ID_Entities = (SELECT ID FROM deleted))))
	DELETE FROM Register WHERE Number_Orders = (SELECT Number FROM Orders WHERE Number = (SELECT Number_Orders FROM Contracts WHERE ID_Entities = (SELECT ID FROM deleted)))
	DELETE FROM Contracts_C_Services WHERE Number_Contracts = (SELECT NUMBER FROM Contracts WHERE ID_Entities = (SELECT ID FROM deleted))
	DELETE FROM Contracts WHERE ID_Entities = (SELECT ID FROM deleted)
	DELETE FROM Orders WHERE Number = (SELECT Number_Orders FROM Contracts WHERE ID_Entities = (SELECT ID FROM deleted))
	DELETE FROM Work_Spec WHERE ID = (SELECT ID_Work_Spec FROM Orders WHERE Number = (SELECT Number_Orders FROM Contracts WHERE ID_Entities = (SELECT ID FROM deleted)))
	DELETE FROM Employees_Entities WHERE ID_Entities = (SELECT ID FROM deleted)
	DELETE FROM Entities WHERE ID = (SELECT ID FROM deleted)
END
GO

CREATE TRIGGER SERVICECOUNT 
   ON  [Contracts_C_Services] 
   AFTER INSERT, UPDATE
AS 
   DECLARE @ID_S INT
BEGIN
	SET @ID_S = (SELECT [ID_C_Services] FROM inserted)
	UPDATE [C_Services]
	SET [Popularity] = (SELECT COUNT(Number_Contracts) FROM [Contracts_C_Services] WHERE ID_C_Services = @ID_S GROUP BY (ID_C_Services))
	WHERE ID = @ID_S
	SET @ID_S = (SELECT [ID_C_Services] FROM deleted)
	UPDATE [C_Services]
	SET [Popularity] = (SELECT COUNT(Number_Contracts) FROM [Contracts_C_Services] WHERE ID_C_Services = @ID_S GROUP BY (ID_C_Services))
	WHERE ID = @ID_S
END
GO

CREATE TRIGGER SERVICECOUNT_DEL 
	ON [Contracts_C_Services]
	AFTER DELETE
AS
     DECLARE @ID_S INT;
BEGIN
    SET @ID_S = (SELECT [ID_C_Services] FROM deleted)
    UPDATE [C_Services]
    SET [Popularity] = (SELECT COUNT(Number_Contracts) FROM [Contracts_C_Services] WHERE ID_C_Services = @ID_S)
     WHERE ID = @ID_S
END
GO

insert into C_Services (ID, Naming, Cost_m2) values (11, 'Генеральная уборка', 110)
insert into C_Services (ID, Naming, Cost_m2) values (12, 'Химчистка мягкой мебели', 250)
insert into C_Services (ID, Naming, Cost_m2) values (13, 'Мойка окон', 50)
insert into C_Services (ID, Naming, Cost_m2) values (14, 'Шлифовка и полировка мраморных поверхностей', 800)
insert into C_Services (ID, Naming, Cost_m2) values (15, 'Чистка ковров (ковролина)', 70)

insert into Work_Spec (ID, W_Date, W_Time) values (131, '2021-01-25', '13:00:00')
insert into Work_Spec (ID, W_Date, W_Time) values (132, '2021-01-26', '14:00:00')
insert into Work_Spec (ID, W_Date, W_Time) values (133, '2021-01-27', '15:00:00')
insert into Work_Spec (ID, W_Date, W_Time) values (134, '2021-01-28', '16:00:00')
insert into Work_Spec (ID, W_Date, W_Time) values (135, '2021-01-29', '17:00:00')

insert into Work_Types (ID, Naming) values (151, 'Мытье туалетов')
insert into Work_Types (ID, Naming) values (152, 'Вынос мусора')
insert into Work_Types (ID, Naming) values (153, 'Уборка пылесосом')
insert into Work_Types (ID, Naming) values (154, 'Влажная уборка')
insert into Work_Types (ID, Naming) values (155, 'Мытье окон (фасадов)')

insert into Work_Spec_Work_Types (ID_Work_Spec, ID_Work_Types) values (131, 151)
insert into Work_Spec_Work_Types (ID_Work_Spec, ID_Work_Types) values (132, 152)
insert into Work_Spec_Work_Types (ID_Work_Spec, ID_Work_Types) values (133, 153)
insert into Work_Spec_Work_Types (ID_Work_Spec, ID_Work_Types) values (134, 154)
insert into Work_Spec_Work_Types (ID_Work_Spec, ID_Work_Types) values (135, 155)

insert into Rates (ID, Rate, Criteria) values (111, 5, 'Все сделано отлично')
insert into Rates (ID, Rate, Criteria) values (112, 4, 'Все сделано хорошо')
insert into Rates (ID, Rate, Criteria) values (113, 3, 'Все сделано удовлетворительно')
insert into Rates (ID, Rate, Criteria) values (114, 2, 'Все сделано неудовлетворительно')
insert into Rates (ID, Rate, Criteria) values (115, 1, 'Не сделано/заказ не выполнен')

--Вставка сегодняшней (на момент написания скрипта) даты, поэтому если не работает, поменять дату на актуальную (иначе сработает триггер, проверяющий дату)
insert into Orders (Number, ID_Work_Spec, O_Date) values (91, 131, '2020-12-18')
insert into Orders (Number, ID_Work_Spec, O_Date) values (92, 132, '2020-12-18')
insert into Orders (Number, ID_Work_Spec, O_Date) values (93, 133, '2020-12-18')
insert into Orders (Number, ID_Work_Spec, O_Date) values (94, 134, '2020-12-18')
insert into Orders (Number, ID_Work_Spec, O_Date) values (95, 135, '2020-12-18')

insert into Positions (ID, Naming, Salary) values (101, 'Мойщик окон', 40000)
insert into Positions (ID, Naming, Salary) values (102, 'Уборщик', 30000)
insert into Positions (ID, Naming, Salary) values (103, 'Полировщик мрамора', 35000)
insert into Positions (ID, Naming, Salary) values (104, 'Водитель', 20000)
insert into Positions (ID, Naming, Salary) values (105, 'Ответственный за закупку материалов', 40000)

insert into Employees (Passport_SN, ID_Positions, F_Name, S_Name, L_Name, Date_Birth, Date_hire) 
values (1234000001, 101, 'Иван', 'Иванович', 'Иванов', '1975-06-25', '2015-04-25')
insert into Employees (Passport_SN, ID_Positions, F_Name, S_Name, L_Name, Date_Birth, Date_hire) 
values (1234000002, 102, 'Петр', 'Петрович', 'Петров', '1970-01-05', '2017-07-07')
insert into Employees (Passport_SN, ID_Positions, F_Name, S_Name, L_Name, Date_Birth, Date_hire) 
values (1234000003, 103, 'Сидор', 'Сидорович', 'Сидоров', '1980-08-16', '2019-01-25')
insert into Employees (Passport_SN, ID_Positions, F_Name, S_Name, L_Name, Date_Birth, Date_hire) 
values (1234000004, 104, 'Иван', 'Петрович', 'Сидоров', '1978-02-15', '2014-04-24')
insert into Employees (Passport_SN, ID_Positions, F_Name, S_Name, L_Name, Date_Birth, Date_hire) 
values (1234000005, 105, 'Сидор', 'Петрович', 'Иванов', '1969-09-06', '2018-08-05')

insert into Entities (ID, Naming, Square_Offices, E_Address) values (71, 'Google, Inc.', 2000, 'ул. Балчуг, 7')
insert into Entities (ID, Naming, Square_Offices, E_Address) values (72, 'Mail.ru Group', 20000, 'Ленинградский пр. д.39, стр.79')
insert into Entities (ID, Naming, Square_Offices, E_Address) values (73, 'Вконтакте, LLC', 13000, 'Невский проспект, 28')
insert into Entities (ID, Naming, Square_Offices, E_Address) values (74, 'Тинькофф', 1500, '1-й Волоколамский проезд, д. 10, стр. 1')
insert into Entities (ID, Naming, Square_Offices, E_Address) values (75, 'Сбербанк', 3000, 'г. Москва, ул. Вавилова, 19')

insert into Individuals (Passport_SN, F_Name, S_Name, L_Name, I_Address, Room_Square)
values (1234111111, 'Александр', 'Сергеевич', 'Пушкин', 'Арбат, 2', 50)
insert into Individuals (Passport_SN, F_Name, S_Name, L_Name, I_Address, Room_Square)
values (1234111112, 'Александр', 'Сергеевич', 'Грибоедов', 'Ленинский пр., 18', 20)
insert into Individuals (Passport_SN, F_Name, S_Name, L_Name, I_Address, Room_Square)
values (1234111113, 'Владимир', 'Владимирович', 'Маяковский', 'Щорса, 8', 15)
insert into Individuals (Passport_SN, F_Name, S_Name, L_Name, I_Address, Room_Square)
values (1234111114, 'Иван', 'Алексеевич', 'Бунин', 'Авиаторов, 10', 50)
insert into Individuals (Passport_SN, F_Name, S_Name, L_Name, I_Address, Room_Square)
values (1234111115, 'Михаил', 'Юрьевич', 'Лермонтов', 'Бакунинская, 15', 50)

insert into Contracts (Number, Passport_SN_Individuals, C_Name, Sign_Date, Number_Orders, Date_Start, Date_End)
values (21, 1234111111, 'Договор оказания услуг', '2020-12-18', 91, '2021-01-25', '2021-01-25')
insert into Contracts (Number, ID_Entities, C_Name, Sign_Date, Number_Orders, Date_Start, Date_End)
values (22, 71, 'Договор оказания услуг', '2020-12-18', 92, '2021-01-26', '2021-01-26')
insert into Contracts (Number, Passport_SN_Individuals, C_Name, Sign_Date, Number_Orders, Date_Start, Date_End)
values (23, 1234111112, 'Договор оказания услуг', '2020-12-18', 93, '2021-01-27', '2021-01-27')
insert into Contracts (Number, ID_Entities, C_Name, Sign_Date, Number_Orders, Date_Start, Date_End)
values (24, 72, 'Договор оказания услуг', '2020-12-18', 94, '2021-01-28', '2021-01-28')
insert into Contracts (Number, Passport_SN_Individuals, C_Name, Sign_Date, Number_Orders, Date_Start, Date_End)
values (25, 1234111113, 'Договор оказания услуг', '2020-12-18', 95, '2021-01-29', '2021-01-29')

insert into Contracts_C_Services (Number_Contracts, ID_C_Services) values (21, 11)
insert into Contracts_C_Services (Number_Contracts, ID_C_Services) values (22, 12)
insert into Contracts_C_Services (Number_Contracts, ID_C_Services) values (23, 13)
insert into Contracts_C_Services (Number_Contracts, ID_C_Services) values (24, 14)
insert into Contracts_C_Services (Number_Contracts, ID_C_Services) values (25, 15)

insert into Employees_Entities (Passport_SN_Employees, ID_Entities) values (1234000001, 71)
insert into Employees_Entities (Passport_SN_Employees, ID_Entities) values (1234000002, 71)
insert into Employees_Entities (Passport_SN_Employees, ID_Entities) values (1234000003, 71)
insert into Employees_Entities (Passport_SN_Employees, ID_Entities) values (1234000004, 72)
insert into Employees_Entities (Passport_SN_Employees, ID_Entities) values (1234000004, 72)

insert into Employees_Individuals (Passport_SN_Employees, Passport_SN_Individuals) values (1234000001, 1234111111)
insert into Employees_Individuals (Passport_SN_Employees, Passport_SN_Individuals) values (1234000002, 1234111111)
insert into Employees_Individuals (Passport_SN_Employees, Passport_SN_Individuals) values (1234000003, 1234111112)
insert into Employees_Individuals (Passport_SN_Employees, Passport_SN_Individuals) values (1234000004, 1234111112)
insert into Employees_Individuals (Passport_SN_Employees, Passport_SN_Individuals) values (1234000005, 1234111113)

insert into Register (Passport_SN_Employees, ID_Rates, Number_Orders, W_date) values (1234000001, 111, 91, '2021-01-25')
insert into Register (Passport_SN_Employees, ID_Rates, Number_Orders, W_date) values (1234000002, 111, 92, '2021-01-26')
insert into Register (Passport_SN_Employees, ID_Rates, Number_Orders, W_date) values (1234000003, 112, 93, '2021-01-27')
insert into Register (Passport_SN_Employees, ID_Rates, Number_Orders, W_date) values (1234000004, 111, 94, '2021-01-28')
insert into Register (Passport_SN_Employees, ID_Rates, Number_Orders, W_date) values (1234000005, 112, 95, '2021-01-29')

create function dbo.Work_Time(@ID_Employee int)
returns int
as
begin
	declare @Year int;
	set @Year = DATEDIFF(YEAR, (select Date_hire from Employees where Passport_SN = @ID_Employee), GETDATE());
	return @Year;
end
go

create function dbo.GetPN(@ID_Employee int)
returns varchar(6)
as
begin
	declare @N varchar(6), @SN varchar(10);
	set @SN = convert(varchar(10), @ID_Employee);
	set @N = substring(@SN, 5, 6);
	return @N;
end
go

create procedure dbo.insert_entity(@id int, @naming varchar(50), @square_offices int, @e_address varchar(100))
as
begin
	insert into Entities(ID, Naming, Square_Offices, E_Address) values (@id, @naming, @square_offices, @e_address);
end
go

create procedure EmployeesIndividualsEntities
as
begin
	select Passport_SN, 
	L_Name, 
	F_Name, 
	S_Name, 
	(select COUNT(Passport_SN_Individuals) from Employees_Individuals where Passport_SN_Employees = Passport_SN) Q_Ind,
	(select COUNT(ID_Entities) from Employees_Entities where Passport_SN_Employees = Passport_SN) Q_Ent
	from Employees
end